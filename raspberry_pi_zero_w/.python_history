from gpiozero import LED
import gpiozero
module list
print('Hello World!')
from gpiozero import LED
red_led = LED(17)
red_led.on()
red_led.off()
red_led.on()
red_led.off()
red_led.on()\
red_led.off()
from time import sleep
red_led.on()/
red_led.on()\
sleep(5)\
red_led.on()\
sleep(5)
red_led.on()
red_led.off()
while True:
red_led.on()
while True:
	red_led.on()
red_led.off()
while True:
	red_led.on()
	sleep(5)
	red_led.off()
red_led.off()
while True:
	red_led.on()
	sleep(1)
	red_led.off()
red_led.off()
from time import sleep
while True:
	print('a')
	sleep(1)
	print('b')
while True:
	red_led.on()
	sleep(1)
	red_led.off()
while True:
	red_led.off()
	sleep(1)
	red_led.on()
while True:
	red_led.on()
	sleep(1)
	red_led.off()
	sleep(1)
while True:
red_led.on()
red_led.off()
button = Button(2)
from gpiozero import Button
button = Button(2)
while True:
	if button.wait_for_press():
while True:
	if button.is_pressed():
		red_led.on()
	else:
		red_led.off()
while True:
	if button.is_pressed:
		red_led.on()
	else:
		red_led.off()
red_led.off()
button = Button(27)
while True:
	if button.is_pressed:
		red_led.on()
	else:
		red_led.off()
red_led.off()
while True:
	if button.is_pressed:
		red_led.on()
	else:
		red_led.off()
red_led.off()
while True:
    if button.is_pressed:
        print("Pressed")
    else:
        print("Released")
    sleep(1)
button = Button(14)
while True:
    if button.is_pressed:
        print("Pressed")
    else:
        print("Released")
    sleep(1)
while True:
    if button.is_pressed:
        print("Pressed")
    else:
        print("Released")
    sleep(1)
red_led.on()
red_led.off()
red_led.on()
red_led.off()
red_led.on()
red_led.off()
red_led.on()
red_led.off()
red_led.on()
red_led.off()
while True:
    if button.is_pressed:
        print("Pressed")
    else:
        print("Released")
yel_led = LED(14)
button = 1
yel_led = LED(14)
button.close()
from gpiozero import *
button
button = Button(14)
button.close()
yel_led = LED(14)
yel_led.on()
yel_led.off()
yel_led.on()
yel_led.off()
red_led.on()
red_led.off()
red_led.on()
red_led.off()
red_led.on()
red_led.off()
yel_led.on()
yel_led.off()
yel_led.close()
button = Button(14)
while True:
    if button.is_pressed:
        print("Pressed")
    else:
        print("Released")
    sleep(1)
while True:
    if button.is_pressed:
        print("Pressed")
    else:
        print("Released")
    sleep(1)
while True:
    if button.is_pressed:
        print("Pressed")
    else:
        print("Released")
    sleep(1)
while True:
	if button.is_pressed:
		red_led.on()
	else:
		red_led.off()
while True:
     if button.is_pressed:
             red_led.on()
     else:
             red_led.off()
while True:
     if button.is_pressed:
             red_led.on()
     else:
             red_led.off()
while True:
     if button.is_pressed:
             red_led.on()
     else:
             red_led.off()
red_led
yel_led = LED(27)
yel_led.on()
yel_led.onff()
yel_led.off()
while True:
     if button.is_pressed:
             red_led.on()
     else:
             red_led.off()
while True:
	if button.is_pressed:
		red_led.on()
		yel_led.on()
	else:
		red_led.off()
		yel_led.off()
whi_led = LED(22)
whi_led.on()
whi_led.off()
while True:
	if button.is_pressed:
		red_led.on()
		yel_led.on()
		whi_led.on()
	else:
		red_led.off()
		yel_led.off()
		whi_led.off()
gre_led = LED(22)
gre_led = LED(23)
gre_led.on()
gre_led.off()
while True:
	if button.is_pressed:
		red_led.on()
		yel_led.on()
		whi_led.on()
		gre_led.on()
	else:
		red_led.off()
		yel_led.off()
		whi_led.off()
		gre_led.off()
blu_led = LED(24)
blu_led.on()
blu_led.off()
while True:
	if button.is_pressed:
		red_led.on()
		yel_led.on()
		whi_led.on()
		gre_led.on()
		blu_led.on()
	else:
		red_led.off()
		yel_led.off()
		whi_led.off()
		gre_led.off()
		blu_led.off()
print(red_led, yel_led, whi_led, gre_led, blu_led)
import forecastio
from gpiozero import *
from time import sleep
api_key = "a6b52582a65d6c72e1cfbee13be44635"
lat = 29.691078
lng = -95.494720
forecast = forecastio.load_forecast(api_key, lat, lng)
byDay = forecast.daily()
print(byDay.data[0].summary)
print(byDay.data[0].temperatureHigh)
tempHigh = byDay.data[0].temperatureHigh
red_led = LED(17)
yel_led = LED(27)
whi_led = LED(22)
gre_led = LED(23)
blu_led = LED(24)
button = Button(14)
while True:
    button.wait_for_press()
    if tempHigh > 95:
        blu_led.on()
        gre_led.on()
        whi_led.on()
        yel_led.on()
        red_led.on()
        sleep(5)
        red_led.off()
        yel_led.off()
        whi_led.off()
        gre_led.off()
        blu_led.off()
    elif 95 >= tempHigh > 87:
        blu_led.on()
        gre_led.on()
        whi_led.on()
        yel_led.on()
        sleep(5)
        yel_led.off()
        whi_led.off()
        gre_led.off()
        blu_led.off()
    elif 87 >= tempHigh > 80:
        blu_led.on()
        gre_led.on()
        whi_led.on()
        sleep(5)
        whi_led.off()
        gre_led.off()
        blu_led.off()
    elif 80 >= tempHigh > 70:
        blu_led.on()
        gre_led.on()
        sleep(5)
        gre_led.off()
        blu_led.off()
    elif 70 > tempHigh:
        blu_led.on()
        sleep(5)
        blu_led.off()
import forecastio
from gpiozero import *
from time import sleep
api_key = "a6b52582a65d6c72e1cfbee13be44635"
lat = 29.691078
lng = -95.494720
forecast = forecastio.load_forecast(api_key, lat, lng)
byDay = forecast.daily()
print(byDay.data[0].summary)
print(byDay.data[0].temperatureHigh)
tempHigh = byDay.data[0].temperatureHigh
red_led = LED(17)
yel_led = LED(27)
whi_led = LED(22)
gre_led = LED(23)
blu_led = LED(24)
button = Button(14)
while True:
    button.wait_for_press()
    if tempHigh > 95:
        blu_led.on()
        sleep(0.1)
        gre_led.on()
        sleep(0.1)
        whi_led.on()
        sleep(0.1)
        yel_led.on()
        sleep(0.1)
        red_led.on()
        sleep(5)
        red_led.off()
        sleep(0.1)
        yel_led.off()
        sleep(0.1)
        whi_led.off()
        sleep(0.1)
        gre_led.off()
        sleep(0.1)
        blu_led.off()
    elif 95 >= tempHigh > 87:
        blu_led.on()
        sleep(0.1)
        gre_led.on()
        sleep(0.1)
        whi_led.on()
        sleep(0.1)
        yel_led.on()
        sleep(5)
        yel_led.off()
        sleep(0.1)
        whi_led.off()
        sleep(0.1)
        gre_led.off()
        sleep(0.1)
        blu_led.off()
    elif 87 >= tempHigh > 80:
        blu_led.on()
        sleep(0.1)
        gre_led.on()
        sleep(0.1)
        whi_led.on()
        sleep(5)
        whi_led.off()
        sleep(0.1)
        gre_led.off()
        sleep(0.1)
        blu_led.off()
    elif 80 >= tempHigh > 70:
        blu_led.on()
        sleep(0.1)
        gre_led.on()
        sleep(5)
        gre_led.off()
        sleep(0.1)
        blu_led.off()
    elif 70 > tempHigh:
        blu_led.on()
        sleep(5)
        blu_led.off()
import datetime
datetime.datetime.now()
import forecastio
from gpiozero import *
import datetime
from time import sleep
api_key = "a6b52582a65d6c72e1cfbee13be44635"
lat = 29.691078
lng = -95.494720
red_led = LED(17)
yel_led = LED(27)
whi_led = LED(22)
gre_led = LED(23)
blu_led = LED(24)
button = Button(14)
current_time = datetime.datetime.now()
current_time
forecast = forecastio.load_forecast(api_key, lat, lng, time = current_time)
byHour = forecast.hourly()
for hourData in byHour.data:
	print(hourData.time)
	print(hourData.summary)
forecast = forecastio.load_forecast(api_key, lat, lng)
byHour = forecast.hourly()
for hourData in byHour.data:
	print(hourData.time)
	print(hourData.summary)
current_time = 1529164546
forecast = forecastio.load_forecast(api_key, lat, lng, time = current_time)
str(current_time)
forecast = forecastio.load_forecast(api_key, lat, lng, time = current_time)
lat = 25.752861
lng = -80.265457
forecast = forecastio.load_forecast(api_key, lat, lng)
forecastf = forecastio.load_forecast(api_key, lat, lng)
lat = 29.691078
lng = -95.494720
forecastt = forecastio.load_forecast(api_key, lat, lng)
byHour = forecastf.hourly()
for hourData in byHour.data:
	print(hourData.time)
	print(hourData.time[:3])
for hourData in byHour.data:
	print(hourData.time[:3])
	print(hourData.time)
for hourData in byHour.data[:3]:
	print(hourData.time)
byHour = forecastt.hourly()
for hourData in byHour.data[:3]:
	print(hourData.time)
byHour = forecastf.hourly()
for hourData in byHour.data[:3]:
	print(hourData.time)
lat = 37.427457
lng = -122.171532
forecastc = forecastio.load_forecast(api_key, lat, lng)
byHour = forecastc.hourly()
for hourData in byHour.data[:3]:
	print(hourData.time)
current_time = datetime.datetime.now()
lat = 29.691078
lng = -95.494720
forecast = forecastio.load_forecast(api_key, lat, lng, current_time)
byHour = forecast.hourly()
for hourData in byHour.data[:3]:
	print(hourData.time)
current_time
from gpiozero import *
LED(17).on()
LED(17).off()
LED(17).on()
LED(17).off()
LED(17).on()
LED(17).off()
led = LED(17)
led.on()
led.off()
